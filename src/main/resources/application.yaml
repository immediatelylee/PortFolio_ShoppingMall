debug: false
management.endpoints.web.exposure.include: "*"

server.port: 8080

#나중에 제거해야함
server.servlet.session.timeout: 180000

# docker에 맞게 오버라이드 할수 있도록 환경변수 수정
# 로컬db을 사용할 경우 접두사인 SPRING을 LOCAL로 변경할것

spring:
  datasource:
    url: ${SPRING_DB_URL}
    username: ${SPRING_DB_USERNAME}
    password: ${SPRING_DB_PASSWORD}
  jpa:
    database: mysql # 추가 해준 부분
    open-in-view: false
    defer-datasource-initialization: true
    hibernate.ddl-auto: create
    show-sql: true
    properties:
      hibernate.format_sql: true
      hibernate.default_batch_fetch_size: 100
      hibernate.dialect: org.hibernate.dialect.MySQL8Dialect
  sql.init.mode: always
  # Thymeleaf cache 사용중지
  thymeleaf.cache: false
  thymeleaf:
    prefix: classpath:/templates/
    suffix: .html

logging:
  level:
    com:
      mysql:
        cj:
          jdbc=DEBUG:
    org.hibernate.type.descriptor.sql.BasicBinder: trace
    # ResourceHandler의 최종경로확인(이미지경로)
    org.springframework.web.servlet.resource: DEBUG

#파일 한 개당 최대 사이즈
spring.servlet.multipart.maxFileSize: 20MB
#요청당 최대 파일 크기
spring.servlet.multipart.maxRequestSize: 100MB
#상품 이미지 업로드 경로
itemImgLocation: ${ITEM_IMG_LOCATION:file:///C:/shop/item}
brandImgLocation: ${BRAND_IMG_LOCATION:file:///C:/shop/brand}
#리소스 업로드 경로
uploadPath: ${UPLOAD_PATH:file:///C:/shop/}



#포트원
apiKey: ${PO_apiKey}
secretKey: ${PO_secretKey}


#기본 batch size 설정
spring.jpa.properties.hibernate.default_batch_fetch_size: 1000

---
spring:
  config.activate.on-profile: test
  datasource.url: jdbc:h2:mem:testdb

---

spring:
  config.activate.on-profile: heroku
  datasource:
    url: ${JAWSDB_URL_jdbc}
  driver-class-name: com.mysql.cj.jdbc.Driver
  jpa.hibernate.ddl-auto: create
  sql.init.mode: always
